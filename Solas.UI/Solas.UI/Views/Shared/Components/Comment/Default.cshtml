@model IEnumerable<Solas.BL.Models.Comment>


<div class="tab-pane fade active show" id="nav-seller" role="tabpanel">
    <div class="tabs-wrapper mt-35">
        @if (Model != null && Model.Any())
        {
            @foreach (var item in Model)
            {


                <div class="course-review-item mb-30">
                    <div class="course-reviews-img">
                        <a href="#">
                            <img src="/assets/img/testimonial/profile-user.png" 
                            alt="image not found">
                        </a>
                    </div>
                    <div class="course-review-list">
                        <h5><a href="#">Sotapdi Kunda</a></h5>
                        <div class="course-start-icon">
                            @for (int i = 0; i < item.Rate; i++)
                            {
                                <i class="fas fa-star"></i>

                            }
                            @for (int i = 0; i < 5-item.Rate; i++)
                            {
                            <i class="fal fa-star"></i>
                            }

                            <span class="formattedTime" data-createdate="@item.Createdate"></span>

                           

                        </div>
                        <p>
                            @item.CommentText
                        </p>
                    </div>
                </div>
            }
        }
        @{
            var newComment = new Solas.BL.Models.Comment(); // Create a new Comment object
        }
        <form asp-action="AddComment" asp-controller="Home" method="post" id="commentForm">
         
            <input type="hidden" asp-for="@newComment.ProductId" name="ProductId" value="@ViewData["ProductId"]" />
         <div class="product__details-comment ">
            <div class="comment-title mb-20">
                <h3>Add a review</h3>
@*                 <p >Your email address will not be published. Required fields are marked *</p>
 *@            </div>
            <div class="comment-rating mb-20">
                <span>Overall ratings</span>
 
                  <fieldset class="rating">
      
        <input id="demo-1" type="radio" name="demo"  value="1"> 
        <label for="demo-1">1 star</label>
        <input id="demo-2" type="radio" name="demo" value="2">
        <label for="demo-2">2 stars</label>
        <input id="demo-3" type="radio" name="demo" value="3">
        <label for="demo-3">3 stars</label>
        <input id="demo-4" type="radio" name="demo" value="4">
        <label for="demo-4">4 stars</label>
        <input id="demo-5" type="radio" name="demo" value="5">
        <label for="demo-5">5 stars</label>
        
        <div class="stars">
            <label style="font-size: 24px;"   for="demo-1" aria-label="1 star" title="1 star"></label>
            <label style="font-size: 24px;" for="demo-2" aria-label="2 stars" title="2 stars"></label>
            <label style="font-size: 24px;" for="demo-3" aria-label="3 stars" title="3 stars"></label>
            <label style="font-size: 24px;" for="demo-4" aria-label="4 stars" title="4 stars"></label>
            <label style="font-size: 24px;" for="demo-5" aria-label="5 stars" title="5 stars"></label>   
        </div>
        
    </fieldset>
      <label for="toggle-rating">
          <input type="checkbox" id="toggle-rating" checked hidden>
          
      </label>

                    <input asp-for="@newComment.Rate" type="hidden" name="Rate" />



            </div>
            <div class="comment-input-box mb-20">
               
                    <div class="row">
                        <div class="col-xxl-12 form-group">
                            <input asp-for="@newComment.CommentText" name="CommentText" placeholder="Your review" class="comment-input comment-textarea mb-20" />

                           
                        </div>
                      
                        <div class="col-xxl-12 form-group">
                            <div class="comment-submit">
                    <button type="submit" class="fill-btn">Add Comment</button>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
        </form>
    </div>
</div>
<style type="text/css">
    /* 
        Use :not with impossible condition so inputs are only hidden 
        if pseudo selectors are supported. Otherwise the user would see
        no inputs and no highlighted stars.
    */
    .rating input[type="radio"]:not(:nth-of-type(0)) {
        /* hide visually */    
        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }
    .rating [type="radio"]:not(:nth-of-type(0)) + label {
        display: none;
    }
    
    label[for]:hover {
        cursor: pointer;
    }
    
    .rating .stars label:before {
        content: "★";
    }
    
    .stars label {
        color: lightgray;
    }
    
    .stars label:hover {
        text-shadow: 0 0 1px #000;
    }
    
    .rating [type="radio"]:nth-of-type(1):checked ~ .stars label:nth-of-type(-n+1),
    .rating [type="radio"]:nth-of-type(2):checked ~ .stars label:nth-of-type(-n+2),
    .rating [type="radio"]:nth-of-type(3):checked ~ .stars label:nth-of-type(-n+3),
    .rating [type="radio"]:nth-of-type(4):checked ~ .stars label:nth-of-type(-n+4),
    .rating [type="radio"]:nth-of-type(5):checked ~ .stars label:nth-of-type(-n+5) {
        color: orange;
    }
    
    .rating [type="radio"]:nth-of-type(1):focus ~ .stars label:nth-of-type(1),
    .rating [type="radio"]:nth-of-type(2):focus ~ .stars label:nth-of-type(2),
    .rating [type="radio"]:nth-of-type(3):focus ~ .stars label:nth-of-type(3),
    .rating [type="radio"]:nth-of-type(4):focus ~ .stars label:nth-of-type(4),
    .rating [type="radio"]:nth-of-type(5):focus ~ .stars label:nth-of-type(5) {
        color: darkorange;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<script>
    document.querySelectorAll('.formattedTime').forEach(function (element) {
        var createdate = element.getAttribute('data-createdate');
        var dateTime = moment(createdate);
        var currentTime = moment();
        var timeDifference = moment.duration(currentTime.diff(dateTime));

        if (timeDifference.asMinutes() < 60) {
            var minutesAgo = Math.round(timeDifference.asMinutes());
            var formattedTime = minutesAgo + (minutesAgo === 1 ? ' min ago' : ' mins ago');
        } else if (timeDifference.asHours() < 24) {
            var hoursAgo = Math.round(timeDifference.asHours());
            var formattedTime = hoursAgo + (hoursAgo === 1 ? ' hour ago' : ' hours ago');
        } else if (timeDifference.asDays() < 30) {
            var daysAgo = Math.round(timeDifference.asDays());
            var formattedTime = daysAgo + (daysAgo === 1 ? ' day ago' : ' days ago');
        } else if (timeDifference.asMonths() < 12) {
            var monthsAgo = Math.round(timeDifference.asMonths());
            var formattedTime = monthsAgo + (monthsAgo === 1 ? ' month ago' : ' months ago');
        } else {
            var yearsAgo = Math.round(timeDifference.asYears());
            var formattedTime = yearsAgo + (yearsAgo === 1 ? ' year ago' : ' years ago');
        }

        element.innerText = formattedTime;
    });



    (function () {
        var rating = document.querySelector('.rating');
        var handle = document.getElementById('toggle-rating');
        handle.onchange = function (event) {
            rating.classList.toggle('rating', handle.checked);
        };
    }());
    document.querySelectorAll('.rating input[type="radio"]').forEach(function (radio) {
        radio.addEventListener('change', function (event) {
            var selectedRating = event.target.value;
            document.querySelector('input[name="Rate"]').value = selectedRating;
        });
    });
</script>